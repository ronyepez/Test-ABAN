// <auto-generated />
using System;
using API_ABAN.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_ABAN.Migrations
{
    [DbContext(typeof(ApplicatioDbContext))]
    [Migration("20231030025824_Crear BD - Modelo de Datos - Datos Iniciales")]
    partial class CrearBDModelodeDatosDatosIniciales
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_ABAN.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CUIT")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("Celular")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<bool>("DeletedAt")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("Date");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            ClienteId = 1,
                            Apellidos = "Pérez",
                            CUIT = "252032546",
                            Celular = 1125631478,
                            DeletedAt = false,
                            Email = "pperez@gmail.com",
                            FechaNacimiento = new DateTime(2000, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombres = "Pedro"
                        },
                        new
                        {
                            ClienteId = 2,
                            Apellidos = "Santana",
                            CUIT = "202054564",
                            Celular = 1165231590,
                            DeletedAt = false,
                            Email = "msantana@gmail.com",
                            FechaNacimiento = new DateTime(1995, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombres = "María"
                        },
                        new
                        {
                            ClienteId = 3,
                            Apellidos = "Contreras",
                            CUIT = "252005569",
                            Celular = 1161971590,
                            DeletedAt = false,
                            Email = "ccontreras@gmail.com",
                            FechaNacimiento = new DateTime(1999, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombres = "Carmen"
                        });
                });

            modelBuilder.Entity("API_ABAN.Models.Direccion", b =>
                {
                    b.Property<int>("DireccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DireccionId"));

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<bool>("DeletedAt")
                        .HasColumnType("bit");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DireccionId");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Direcciones");

                    b.HasData(
                        new
                        {
                            DireccionId = 1,
                            Calle = "Calle 2",
                            Ciudad = "Ciudad B",
                            ClienteId = 1,
                            DeletedAt = false,
                            Numero = 123,
                            Pais = "Argentina",
                            Provincia = "Provincia A"
                        },
                        new
                        {
                            DireccionId = 2,
                            Calle = "Calle 3",
                            Ciudad = "Ciudad A",
                            ClienteId = 3,
                            DeletedAt = false,
                            Numero = 321,
                            Pais = "Argentina",
                            Provincia = "Provincia B"
                        },
                        new
                        {
                            DireccionId = 3,
                            Calle = "Calle 1",
                            Ciudad = "Ciudad C",
                            ClienteId = 2,
                            DeletedAt = false,
                            Numero = 456,
                            Pais = "Argentina",
                            Provincia = "Provincia C"
                        });
                });

            modelBuilder.Entity("API_ABAN.Models.Direccion", b =>
                {
                    b.HasOne("API_ABAN.Models.Cliente", "Cliente")
                        .WithOne("Direccion")
                        .HasForeignKey("API_ABAN.Models.Direccion", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("API_ABAN.Models.Cliente", b =>
                {
                    b.Navigation("Direccion")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
